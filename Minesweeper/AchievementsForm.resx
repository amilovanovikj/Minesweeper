<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        PbMAAAAASUVORK5CYII=
</value>
  </data>
</root>